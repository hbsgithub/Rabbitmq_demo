如果我们需要在远程计算机上运行一个功能并等待结果

虽然 RPC 在计算中是一种相当常见的模式，但它经常受到批评。当程序员不知道函数呼叫是本地的，或者是缓慢的 RPC 时，就会出现问题。像这样的混乱会导致不可预知的系统，并增加了不必要的复杂性调试。滥用 RPC 不会简化软件，反而会导致无法维护的意大利面代码。

考虑到这一点，请考虑以下建议：

请确保哪个函数调用是本地的，哪个是远程的， 这是显而易见的。
记录您的系统。明确组件之间的依赖性。
处理错误案例。当 RPC 服务器长时间关闭时，客户端应该如何反应？
当有疑问时，避免RPC。如果可以，则应使用异步管道- 而不是类似 RPC 的阻塞，结果将异步推至下一个计算阶段。